Generated by DB on creation
    user_id
    capture_id
    session_id

Server Data
    backend_version
        Need to create backend versioning scheme... Just Semver probably... Where to start? 0.2.0?
        Update whenever a capture is processed
    matched_skin_color_id
        Update whenever a capture is processed
    calibrated_skin_color
        Update whenever a capture is processed
    processed_date
        Update whenever a capture is processed
    (Session) start_date
        Add on creation of session

App data
    settings
        Pass to server on change?
    app_version
        Pass to server with each capture (in metadata?)
    device_id
        Pass to server with each catpure (in metadata?)

Other
    email
        Currently created by me
    pass
        Currently created by me
    nda_path
    signed_nda

    skin_color_id
        Add on creation of session

    capture_data
        Passed from app. Currently called metadata
    capture_date
        Create on creation of row
    capture_path
        Needs to be provided by server. Server saves photos somewhere, passes path to db



Todo:
    Implement server versions -> Semver
        How to do this properly? Does git have version that you can read from the software?
        Git has a releases function.... does that integrate server side? Something I can read from the application?
    Review current server. Keep in current python state?
        Potentially move to node?
        Potentially move to simplified python setup (keeping flask but maybe removing nginx?)
    Add to server 
        Endpoints for:
            User Login (Do I even want to mess with passwords at this point if im not going to do it right? Leaning no...)
                -> Aka just request user information? open api? Sign the app with a security key that gets passed? HTTPS?
                -> Return user settings and any other information that might be relevant (number of capures in this session)
                -> Return NDA status
            Update Settings
                -> Endpoint for updating user settings
            Update capture endpoint to coperate with the database
                -> Parse JSON and insert into database
                -> Handle app version and device version info in headers
            Create new session for user
                -> Record date created, skin color, etc
                -> Return an id
        Save results to the database....
        Read data out of the database rather than the filesystem

    Add to app
        On Login
            -> Wait to recieve user account database
            -> If NDA is not signed, present user with nda
            -> If current session is expired, present user with the session screen
        NDA Screen
            -> Beta Tester NDA. Signature at bottom?
        New Session screen
            -> Enter information about current skin tone from color swath
            -> Enter secondary information maybe? (LATER?)
            -> Send session information to server
        Home Screen
            -> Add capture counter per session. Increment after server receives data and finishes processing....
        Settings
            -> Option to create new session
        Capture
            -> Send device id
            -> Send application version id  (the version used in the app store? is this accessible from the runtime?)
            -> Send session id

                



            



